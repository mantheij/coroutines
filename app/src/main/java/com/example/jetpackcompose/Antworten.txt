A) Welche Vorteile bieten Coroutinen in der Android-Entwicklung und wie tragen sie dazu bei, asynchrone Aufgaben effizienter und benutzerfreundlicher zu gestalten?

    parallele Ausführung von Aufgaben
    einfache Syntax
    Light weight; braucht wenige Ressourcen
    Gute Lesbarkeit



B) Erkläre warum du dich für einen bestimmten Dispatcher in Aufgabe 2A) entschieden hast.

    Ich habe Dispatchers.Default gewählt, weil er optimiert ist für Berechnungen oder Verarbeitung von Daten



C) Nenne zwei praxisrelevante Anwendungsfälle, bei denen der Einsatz von Services sinnvoll ist. Erkläre kurz warum.

    Datenabgleich im Hintergrund
    Musikwiedergabe im Hintergrund



D) Welche Vorteile bietet die Kombination von Services und Coroutinen? Kannst du ein Beispiel aus dem Code der Wetter-App nennen, in dem beide miteinander kombiniert genutzt werden?

    Coroutinen im Service ermöglichen asynchrone Aufgaben wie Netzwerkaufrufe ohne Blockieren des Haupt-Threads.
    in fetchWeather() wird eine Coroutine genutzt, wodurch der UI-Thread nicht blockiert wird.